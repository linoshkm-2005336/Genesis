/*Find the day of week, based on a reference date */

//We know that 01/01/1970 is Thursday
#include<stdio.h>
int months[]={31,28,31,30,31,30,31,31,30,31,30,31};
char* days[]={"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
//Global arrays of days in months and days of week
int is_leap_year(int);  //To find whether the year is leap-year or not
int find_day(int,int,int);
int main()
{
    printf("Enter date (DD MM YYYY): ");
    int dd,mm,yyyy;
    scanf("%d%d%d",&dd,&mm,&yyyy);
    int day_id=find_day(dd,mm,yyyy);
    if(day_id!=-1)
        printf("%d/%d/%d is a %s",dd,mm,yyyy,days[day_id]);
    return 0;
}
int is_leap_year(int year)
{
    return year%4?0:(year%100?1:(year%400?0:1));
}
int find_day(int day,int month,int year)
{
    if(month<1||month>12||day<1||day>*(months+month-1))
    {
        printf("Invalid date\n");
        return -1;
    }
    else if(year<1970)
    {
        printf("Cannot calculate for days before 01 January 1970");
        return -1;
    }
    for(int i=1970;i<year;i++)
    {   //Summing number of days for previous years
        if(is_leap_year(i))
            day+=366;   //Leap year has 366 days
        else
            day+=365;   //Otherwise 365 days
    }
    if(is_leap_year(year))
        *(months+1)=29;  //In a leap year February has 29 days
    for(int i=0;i<month-1;i++)
        day+=*(months+i);    //Adding days of previous months
    return ((day+3)%7);   //Since one week has 7 days
    //day+3 since the reference date 01/01/1970 is a Thurday
}
